<project name="com.buglabs.osgi.concierge.feature" default="publish">
	<property file="../system.properties" />

	<property name="project.feature" value="com.buglabs.osgi.concierge.feature" />
	<property name="meta.project" value="com.buglabs.osgi.concierge" />
	<property name="eclipse.dir" value="${user.home}/com.eclipse.sdk" />
	<property name="eclipse.file" value="${user.home}/com.eclipse.sdk/eclipse-lin.tar.gz" />
	<property name="base.build.dir" location="${basedir}/.." />

	<!-- Setup ant-contrib libraties -->
	<taskdef resource="net/sf/antcontrib/antcontrib.properties">
		<classpath>
			<pathelement location="/usr/share/ant/lib/ant-contrib-0.6.jar" />
		</classpath>
	</taskdef>

	<!-- add SVN task -->
	<path id="svnant.classpath"  >
		<fileset dir="/usr/share/ant/lib/svn/" >
        		<include name="*.jar" />
		</fileset>
	</path>

	<typedef resource="org/tigris/subversion/svnant/svnantlib.xml" classpathref="svnant.classpath" />


	<!-- ===================================================================== -->
	<!-- Build properties setup -->
	<!-- Depending on how this script is executed build properties are either generated or inhereted from calling script -->
	<!-- ===================================================================== -->
	<if>
		<not>
      			<isset property="full.sdk.build.id"/>
		</not>
      		<then>
			<echo message="[Build type]: Running individual component build..."/>
			<buildnumber file="com.buglabs.osgi.concierge.buildnum" />

			<tstamp />
			<property name="timestamp" value="${DSTAMP}${TSTAMP}" />

			<property name="build.id" value="${build.number}_${build.letter}${timestamp}" />
			<property name="build.label" value="${mm.version}${build.id}" />
			<property name="meta.project.version" value="${build.id}" />
      		</then>
		<else>
			<echo message="[Build type]: Running full SDK component build..."/>
			<property name="build.id" value="${full.sdk.build.id}"/>
			<property name="build.label" value="${mm.version}${build.id}" />
			<property name="meta.project.version" value="${build.id}" />
		</else>
    	</if>

	<target name="prepareBuildDirectories" depends="checkout">
		<echo message="Checking out projects from svn and preparing directories..."/>

		<mkdir dir="${checkout.dir}/${project.feature}/build" />
		<mkdir dir="${checkout.dir}/${project.feature}/build/plugins" />
		<mkdir dir="${checkout.dir}/${project.feature}/build/features" />

		<copy todir="${checkout.dir}/${project.feature}/build/plugins">
			<fileset dir="${checkout.dir}" excludes="**/${project.feature}/**"/>
		</copy>

		<copy todir="${checkout.dir}/${project.feature}/build/features/${project.feature}">
			<fileset dir="${checkout.dir}/${project.feature}" excludes="**/build/**"/>
		</copy>
	</target>

	<!-- this target is being used by other build scripts, do not change -->
	<target name="checkout">
		<svn>
	        	<checkout url="${svn.url}/com.buglabs.osgi.concierge.core" destPath="${checkout.dir}/com.buglabs.osgi.concierge.core" />
			<checkout url="${svn.url}/com.buglabs.osgi.concierge.devtools" destPath="${checkout.dir}/com.buglabs.osgi.concierge.devtools" />
			<checkout url="${svn.url}/com.buglabs.osgi.concierge.doc" destPath="${checkout.dir}/com.buglabs.osgi.concierge.doc" />
			<checkout url="${svn.url}/com.buglabs.osgi.concierge.feature" destPath="${checkout.dir}/com.buglabs.osgi.concierge.feature" />
			<checkout url="${svn.url}/com.buglabs.osgi.concierge.runtime" destPath="${checkout.dir}/com.buglabs.osgi.concierge.runtime" />
			<checkout url="${svn.url}/com.buglabs.osgi.concierge.ui" destPath="${checkout.dir}/com.buglabs.osgi.concierge.ui" />
			<checkout url="${svn.url}/com.buglabs.osgi.concierge.updatesite" destPath="${checkout.dir}/com.buglabs.osgi.concierge.updatesite" />
    		</svn>
	</target>

	<target name="build" depends="clean,setup,prepareBuildDirectories">
		<echo message="###############"/>
		<echo message="Building CTE..."/>		
		<echo message="###############"/>
		<!-- check if eclipse binary exists, if it does, copy to tmp otherwise get it -->
		<if>
			<available file="${eclipse.file}" type="file" />
			<then>
				<echo message="${eclipse.file} exists, copying..." />
				<copy todir="${checkout.dir}/com.eclipse.sdk">
					<fileset file="${eclipse.file}" />
				</copy>
			</then>
			<else>
				<echo message="${eclipse.file} does not exist, getting file..." />
				<mkdir dir="${eclipse.dir}" />
				<get src="${svn}/eclipse-lin.tar.gz" dest="${eclipse.file}" username="${svn.username}" password="${svn.password}" />

				<copy todir="${checkout.dir}/com.eclipse.sdk">
					<fileset file="${eclipse.file}" />
				</copy>
			</else>
		</if>

		<exec dir="${checkout.dir}/com.eclipse.sdk" executable="tar">
			<arg line="xfzv eclipse-lin.tar.gz" />
		</exec>

		<!-- Call the target that does everything -->
		<ant antfile="build.xml" target="bundles.all" dir="${checkout.dir}/${project.feature}" />
	</target>

	<!-- 
		this target is called by default in the script. When building from com.buglabs.sdk.xml call build target so that that script will generate appropriate
		file names
	-->
	<target name="publish" depends="build">
		<echo message="Publishing ${meta.project}..."/>
		<mkdir dir="${base.build.dir}/artifacts/${meta.project}/${build.label}" />

		<copy todir="${base.build.dir}/artifacts/${meta.project}/${build.label}">
			<fileset dir="${checkout.dir}/${project.feature}/dist" />
		</copy>

		<exec dir="${base.build.dir}/artifacts/${meta.project}/" executable="rm">
			<arg line="current" />
		</exec>	

		<symlink link="${base.build.dir}/artifacts/${meta.project}/current" resource="${base.build.dir}/artifacts/${meta.project}/${build.label}"/>
	</target>

	<target name="clean">
		<echo message="Deleting previous checkout directories..."/>
		<delete dir="${checkout.dir}" />
	</target>

	<target name="setup">
		<echo message="Setting up checkout directories..."/>
		<mkdir dir="${checkout.dir}" />
	</target>
</project>